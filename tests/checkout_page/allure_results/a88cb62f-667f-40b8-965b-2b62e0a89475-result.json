{"name": "Попытка оформить заказ при пропуске ввода данных в обязательное поле", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nStacktrace:\n#0 0x571bcba372ca <unknown>\n#1 0x571bcb4de550 <unknown>\n#2 0x571bcb4f1b9b <unknown>\n#3 0x571bcb4f0952 <unknown>\n#4 0x571bcb4e5aa9 <unknown>\n#5 0x571bcb4e5bd5 <unknown>\n#6 0x571bcb4e3cef <unknown>\n#7 0x571bcb4e7cda <unknown>\n#8 0x571bcb57ca1e <unknown>\n#9 0x571bcb555bc2 <unknown>\n#10 0x571bcb57b9e6 <unknown>\n#11 0x571bcb555993 <unknown>\n#12 0x571bcb521d6b <unknown>\n#13 0x571bcb523141 <unknown>\n#14 0x571bcb9fc2ab <unknown>\n#15 0x571bcba000b9 <unknown>\n#16 0x571bcb9e3139 <unknown>\n#17 0x571bcba00c68 <unknown>\n#18 0x571bcb9c760f <unknown>\n#19 0x571bcba251f8 <unknown>\n#20 0x571bcba253d6 <unknown>\n#21 0x571bcba365e6 <unknown>\n#22 0x7fb416bf2aa4 <unknown>\n#23 0x7fb416c7fa34 __clone", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"71dfb6f0060b9c52b62953ba289262f5\")>\n\n    @allure.title(\"Попытка оформить заказ при пропуске ввода данных в обязательное поле\")\n    def test_place_order_with_empty_field(browser):\n        logging.info(\"Start test_place_order_with_empty_field\")\n    \n        open_main_page(browser)\n        add_pizza_to_cart(browser, \"425\")\n        open_account_page(browser)\n        fill_auth_form(browser, \"rick deckard\", \"1234\")\n        click_element(browser, (By.XPATH, \"//button[contains(@name, 'login')]\"), \"Нажать на кнопку «Войти»\")\n>       open_checkout_page(browser)\n\ntest_place_order_with_empty_field.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\actions\\navigation.py:15: in open_checkout_page\n    click_element(browser, (By.XPATH, \"//a[contains(text(), 'Оформление заказа')]\"),\n..\\..\\src\\utils\\web_helpers\\browser_actions.py:19: in click_element\n    el = WebDriverWait(browser, 30).until(\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:625: in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:252: in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:272: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:341: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:551: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B5BFA2C7C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#21 0x571bcba365e6 \\\\u003Cunknown>\\\\n#22 0x7fb416bf2aa4 \\\\u003Cunknown>\\\\n#23 0x7fb416c7fa34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nE       Stacktrace:\nE       #0 0x571bcba372ca <unknown>\nE       #1 0x571bcb4de550 <unknown>\nE       #2 0x571bcb4f1b9b <unknown>\nE       #3 0x571bcb4f0952 <unknown>\nE       #4 0x571bcb4e5aa9 <unknown>\nE       #5 0x571bcb4e5bd5 <unknown>\nE       #6 0x571bcb4e3cef <unknown>\nE       #7 0x571bcb4e7cda <unknown>\nE       #8 0x571bcb57ca1e <unknown>\nE       #9 0x571bcb555bc2 <unknown>\nE       #10 0x571bcb57b9e6 <unknown>\nE       #11 0x571bcb555993 <unknown>\nE       #12 0x571bcb521d6b <unknown>\nE       #13 0x571bcb523141 <unknown>\nE       #14 0x571bcb9fc2ab <unknown>\nE       #15 0x571bcba000b9 <unknown>\nE       #16 0x571bcb9e3139 <unknown>\nE       #17 0x571bcba00c68 <unknown>\nE       #18 0x571bcb9c760f <unknown>\nE       #19 0x571bcba251f8 <unknown>\nE       #20 0x571bcba253d6 <unknown>\nE       #21 0x571bcba365e6 <unknown>\nE       #22 0x7fb416bf2aa4 <unknown>\nE       #23 0x7fb416c7fa34 __clone\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException"}, "steps": [{"name": "Открыть главную страницу сайта Pizzeria", "status": "passed", "start": 1757611364822, "stop": 1757611368364}, {"name": "Навести курсор на пиццу с ID 425", "status": "passed", "start": 1757611368364, "stop": 1757611369214}, {"name": "Нажать на кнопку «В корзину» для пиццы с ID 425", "status": "passed", "start": 1757611369251, "stop": 1757611369337}, {"name": "Открыть страницу аккаунта", "status": "passed", "start": 1757611369337, "stop": 1757611369894}, {"name": "Ввести имя пользователя", "status": "passed", "start": 1757611369894, "stop": 1757611369997}, {"name": "Ввести пароль", "status": "passed", "start": 1757611369997, "stop": 1757611370079}, {"name": "Нажать на кнопку «Войти»", "status": "passed", "start": 1757611370079, "stop": 1757611370164}, {"name": "Открыть страницу оформления заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nStacktrace:\n#0 0x571bcba372ca <unknown>\n#1 0x571bcb4de550 <unknown>\n#2 0x571bcb4f1b9b <unknown>\n#3 0x571bcb4f0952 <unknown>\n#4 0x571bcb4e5aa9 <unknown>\n#5 0x571bcb4e5bd5 <unknown>\n#6 0x571bcb4e3cef <unknown>\n#7 0x571bcb4e7cda <unknown>\n#8 0x571bcb57ca1e <unknown>\n#9 0x571bcb555bc2 <unknown>\n#10 0x571bcb57b9e6 <unknown>\n#11 0x571bcb555993 <unknown>\n#12 0x571bcb521d6b <unknown>\n#13 0x571bcb523141 <unknown>\n#14 0x571bcb9fc2ab <unknown>\n#15 0x571bcba000b9 <unknown>\n#16 0x571bcb9e3139 <unknown>\n#17 0x571bcba00c68 <unknown>\n#18 0x571bcb9c760f <unknown>\n#19 0x571bcba251f8 <unknown>\n#20 0x571bcba253d6 <unknown>\n#21 0x571bcba365e6 <unknown>\n#22 0x7fb416bf2aa4 <unknown>\n#23 0x7fb416c7fa34 __clone\n\n", "trace": "  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\src\\utils\\web_helpers\\browser_actions.py\", line 19, in click_element\n    el = WebDriverWait(browser, 30).until(\n        EC.element_to_be_clickable(locator)\n    )\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 625, in _predicate\n    element = visibility_of(target)(driver)\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 252, in _predicate\n    return _element_if_visible(element)\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 272, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 341, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 551, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1757611370164, "stop": 1757611370526}], "attachments": [{"name": "log", "source": "4f0124b3-5996-49fe-a5b7-47bddcd7d9e0-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c0abcf95-9d14-440e-8578-d91304869fbc-attachment.txt", "type": "text/plain"}], "start": 1757611364822, "stop": 1757611370527, "uuid": "118dc2e4-95cd-4ef6-9515-e52be1a9ebb3", "historyId": "b4108212c96b5df9af9853e62adbc8f4", "testCaseId": "b4108212c96b5df9af9853e62adbc8f4", "fullName": "tests.checkout_page.test_place_order_with_empty_field#test_place_order_with_empty_field", "labels": [{"name": "parentSuite", "value": "tests.checkout_page"}, {"name": "suite", "value": "test_place_order_with_empty_field"}, {"name": "host", "value": "DESKTOP-2SK90NU"}, {"name": "thread", "value": "2724-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.checkout_page.test_place_order_with_empty_field"}], "titlePath": ["tests", "checkout_page", "test_place_order_with_empty_field.py"]}