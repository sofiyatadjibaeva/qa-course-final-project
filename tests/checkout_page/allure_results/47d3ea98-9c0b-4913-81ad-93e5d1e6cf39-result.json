{"name": "Переход на страницу оформления заказа через корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5f262c45e2ca <unknown>\n#1 0x5f262bf05550 <unknown>\n#2 0x5f262bf570f0 <unknown>\n#3 0x5f262bf572e1 <unknown>\n#4 0x5f262bfa55e4 <unknown>\n#5 0x5f262bf7cbed <unknown>\n#6 0x5f262bfa29e6 <unknown>\n#7 0x5f262bf7c993 <unknown>\n#8 0x5f262bf48d6b <unknown>\n#9 0x5f262bf4a141 <unknown>\n#10 0x5f262c4232ab <unknown>\n#11 0x5f262c4270b9 <unknown>\n#12 0x5f262c40a139 <unknown>\n#13 0x5f262c427c68 <unknown>\n#14 0x5f262c3ee60f <unknown>\n#15 0x5f262c44c1f8 <unknown>\n#16 0x5f262c44c3d6 <unknown>\n#17 0x5f262c45d5e6 <unknown>\n#18 0x75e6e96eeaa4 <unknown>\n#19 0x75e6e977ba34 __clone", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"5b24ceba7acce941a4805676b0d4aa3c\")>\n\n    @allure.title(\"Переход на страницу оформления заказа через корзину\")\n    def test_open_checkout_from_cart(browser):\n        logging.info(\"Start test_open_checkout_from_cart\")\n    \n        open_main_page(browser)\n        add_pizza_to_cart(browser, \"425\")\n        open_account_page(browser)\n        fill_auth_form(browser, \"rick deckard\", \"1234\")\n        click_element(browser, (By.XPATH, \"//button[contains(@name, 'login')]\"), \"Нажать на кнопку «Войти»\")\n        open_cart_page(browser)\n        click_element(browser, (By.XPATH, \"//a[contains(@class, 'checkout-button button alt wc-forward')]\"),\n                      \"Нажать на кнопку «Перейти к оплате»\")\n>       check_checkout_page(browser)\n\ntest_open_checkout_from_cart.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\actions\\checkout.py:9: in check_checkout_page\n    assert_text_in_element(browser, (By.XPATH, \"(//h3)[1]\"), \"Детали заказа\",\n..\\..\\src\\utils\\web_helpers\\assertions.py:19: in assert_text_in_element\n    el = WebDriverWait(browser, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5b24ceba7acce941a4805676b0d4aa3c\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000016111F009A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5f262c45e2ca <unknown>\nE       #1 0x5f262bf05550 <unknown>\nE       #2 0x5f262bf570f0 <unknown>\nE       #3 0x5f262bf572e1 <unknown>\nE       #4 0x5f262bfa55e4 <unknown>\nE       #5 0x5f262bf7cbed <unknown>\nE       #6 0x5f262bfa29e6 <unknown>\nE       #7 0x5f262bf7c993 <unknown>\nE       #8 0x5f262bf48d6b <unknown>\nE       #9 0x5f262bf4a141 <unknown>\nE       #10 0x5f262c4232ab <unknown>\nE       #11 0x5f262c4270b9 <unknown>\nE       #12 0x5f262c40a139 <unknown>\nE       #13 0x5f262c427c68 <unknown>\nE       #14 0x5f262c3ee60f <unknown>\nE       #15 0x5f262c44c1f8 <unknown>\nE       #16 0x5f262c44c3d6 <unknown>\nE       #17 0x5f262c45d5e6 <unknown>\nE       #18 0x75e6e96eeaa4 <unknown>\nE       #19 0x75e6e977ba34 __clone\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Открыть главную страницу сайта Pizzeria", "status": "passed", "start": 1757612590410, "stop": 1757612594494}, {"name": "Навести курсор на пиццу с ID 425", "status": "passed", "start": 1757612594495, "stop": 1757612594793}, {"name": "Нажать на кнопку «В корзину» для пиццы с ID 425", "status": "passed", "start": 1757612594793, "stop": 1757612594886}, {"name": "Открыть страницу аккаунта", "status": "passed", "start": 1757612594886, "stop": 1757612595591}, {"name": "Ввести имя пользователя", "status": "passed", "start": 1757612595591, "stop": 1757612595695}, {"name": "Ввести пароль", "status": "passed", "start": 1757612595695, "stop": 1757612595773}, {"name": "Нажать на кнопку «Войти»", "status": "passed", "start": 1757612595773, "stop": 1757612595852}, {"name": "Открыть страницу корзины", "status": "passed", "start": 1757612595852, "stop": 1757612597282}, {"name": "Нажать на кнопку «Перейти к оплате»", "status": "passed", "start": 1757612597282, "stop": 1757612597764}, {"name": "Проверить, что отображается заголовок «Оформление заказа»", "status": "passed", "start": 1757612597764, "stop": 1757612597797}, {"name": "Проверить, что отображается подзаголовок «Детали заказа»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5f262c45e2ca <unknown>\n#1 0x5f262bf05550 <unknown>\n#2 0x5f262bf570f0 <unknown>\n#3 0x5f262bf572e1 <unknown>\n#4 0x5f262bfa55e4 <unknown>\n#5 0x5f262bf7cbed <unknown>\n#6 0x5f262bfa29e6 <unknown>\n#7 0x5f262bf7c993 <unknown>\n#8 0x5f262bf48d6b <unknown>\n#9 0x5f262bf4a141 <unknown>\n#10 0x5f262c4232ab <unknown>\n#11 0x5f262c4270b9 <unknown>\n#12 0x5f262c40a139 <unknown>\n#13 0x5f262c427c68 <unknown>\n#14 0x5f262c3ee60f <unknown>\n#15 0x5f262c44c1f8 <unknown>\n#16 0x5f262c44c3d6 <unknown>\n#17 0x5f262c45d5e6 <unknown>\n#18 0x75e6e96eeaa4 <unknown>\n#19 0x75e6e977ba34 __clone\n\n", "trace": "  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\src\\utils\\web_helpers\\assertions.py\", line 19, in assert_text_in_element\n    el = WebDriverWait(browser, 30).until(\n        EC.visibility_of_element_located(locator)\n    )\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1757612597798, "stop": 1757612628191}], "attachments": [{"name": "log", "source": "48d09407-4e09-4ff4-8b87-256f9c144f57-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "3235ae6b-b31b-4c75-942c-2053fc2ecad5-attachment.txt", "type": "text/plain"}], "start": 1757612590409, "stop": 1757612628192, "uuid": "8b770fa5-5822-45f6-a832-6c8f57f091ef", "historyId": "008ec3038197c2edf5c58ff0e635beae", "testCaseId": "008ec3038197c2edf5c58ff0e635beae", "fullName": "tests.checkout_page.test_open_checkout_from_cart#test_open_checkout_from_cart", "labels": [{"name": "parentSuite", "value": "tests.checkout_page"}, {"name": "suite", "value": "test_open_checkout_from_cart"}, {"name": "host", "value": "DESKTOP-2SK90NU"}, {"name": "thread", "value": "7040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.checkout_page.test_open_checkout_from_cart"}], "titlePath": ["tests", "checkout_page", "test_open_checkout_from_cart.py"]}