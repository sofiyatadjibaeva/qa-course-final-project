{"name": "Изменение количества пиццы в корзине", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"quantity_68a5c1e817012\"]\"}\n  (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n#0 0x5943064662ca <unknown>\n#1 0x594305f0d550 <unknown>\n#2 0x594305f5f0f0 <unknown>\n#3 0x594305f5f2e1 <unknown>\n#4 0x594305fad5e4 <unknown>\n#5 0x594305f84bed <unknown>\n#6 0x594305faa9e6 <unknown>\n#7 0x594305f84993 <unknown>\n#8 0x594305f50d6b <unknown>\n#9 0x594305f52141 <unknown>\n#10 0x59430642b2ab <unknown>\n#11 0x59430642f0b9 <unknown>\n#12 0x594306412139 <unknown>\n#13 0x59430642fc68 <unknown>\n#14 0x5943063f660f <unknown>\n#15 0x5943064541f8 <unknown>\n#16 0x5943064543d6 <unknown>\n#17 0x5943064655e6 <unknown>\n#18 0x7eeecf763aa4 <unknown>\n#19 0x7eeecf7f0a34 __clone", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"1c01358ba021243b4e558540779f3e1c\")>\n\n    @allure.title(\"Изменение количества пиццы в корзине\")\n    def test_change_pizza_quantity_in_cart(browser):\n        logging.info(\"Start test_change_pizza_quantity_in_cart\")\n    \n        open_main_page(browser)\n        add_pizza_to_cart(browser, \"425\")\n        open_cart_page(browser)\n>       qty_input = browser.find_element(By.ID, \"quantity_68a5c1e817012\")\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_change_pizza_quantity_in_cart.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000029BC970C830>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...unknown>\\\\n#17 0x5943064655e6 \\\\u003Cunknown>\\\\n#18 0x7eeecf763aa4 \\\\u003Cunknown>\\\\n#19 0x7eeecf7f0a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"quantity_68a5c1e817012\"]\"}\nE         (Session info: chrome=138.0.7204.183); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       #0 0x5943064662ca <unknown>\nE       #1 0x594305f0d550 <unknown>\nE       #2 0x594305f5f0f0 <unknown>\nE       #3 0x594305f5f2e1 <unknown>\nE       #4 0x594305fad5e4 <unknown>\nE       #5 0x594305f84bed <unknown>\nE       #6 0x594305faa9e6 <unknown>\nE       #7 0x594305f84993 <unknown>\nE       #8 0x594305f50d6b <unknown>\nE       #9 0x594305f52141 <unknown>\nE       #10 0x59430642b2ab <unknown>\nE       #11 0x59430642f0b9 <unknown>\nE       #12 0x594306412139 <unknown>\nE       #13 0x59430642fc68 <unknown>\nE       #14 0x5943063f660f <unknown>\nE       #15 0x5943064541f8 <unknown>\nE       #16 0x5943064543d6 <unknown>\nE       #17 0x5943064655e6 <unknown>\nE       #18 0x7eeecf763aa4 <unknown>\nE       #19 0x7eeecf7f0a34 __clone\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "steps": [{"name": "Открыть главную страницу сайта Pizzeria", "status": "passed", "start": 1755700685471, "stop": 1755700690527}, {"name": "Навести курсор на пиццу с ID 425", "status": "passed", "start": 1755700690527, "stop": 1755700691237}, {"name": "Нажать на кнопку «В корзину» для ID 425", "status": "passed", "start": 1755700691238, "stop": 1755700691740}, {"name": "Открыть страницу корзины", "status": "passed", "start": 1755700691740, "stop": 1755700694216}], "attachments": [{"name": "log", "source": "b52415c2-d5ce-4954-af6b-970f424830aa-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "63309a65-99cf-4aab-a0bb-8e62188f01bc-attachment.txt", "type": "text/plain"}], "start": 1755700685470, "stop": 1755700694268, "uuid": "41d4af9b-409c-4b76-bd40-9236ba4b0a63", "historyId": "0f2a2edd0c7df1afe27109682aeaee1c", "testCaseId": "0f2a2edd0c7df1afe27109682aeaee1c", "fullName": "tests.cart_page.test_change_pizza_quantity_in_cart#test_change_pizza_quantity_in_cart", "labels": [{"name": "parentSuite", "value": "tests.cart_page"}, {"name": "suite", "value": "test_change_pizza_quantity_in_cart"}, {"name": "host", "value": "DESKTOP-2SK90NU"}, {"name": "thread", "value": "11816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.cart_page.test_change_pizza_quantity_in_cart"}], "titlePath": ["tests", "cart_page", "test_change_pizza_quantity_in_cart.py"]}