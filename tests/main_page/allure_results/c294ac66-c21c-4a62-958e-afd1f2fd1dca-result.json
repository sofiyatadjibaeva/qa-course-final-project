{"name": "Переключение слайдера на главной странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"1038fca5bfdb83107090b6419b3b1574\")>\n\n    @allure.title(\"Переключение слайдера на главной странице\")\n    def test_slider_navigation(browser):\n        logging.info(\"Start test_slider_navigation\")\n    \n        open_main_page(browser)\n    \n        slide_locator = (By.XPATH, \"(//aside[@id='accesspress_store_product-5']//li[contains(@class,'slick-slide')])[5]\")\n        slide = browser.find_element(*slide_locator)\n    \n        # Шаг 1. Проверяем что слайд активен изначально\n        classes = slide.get_attribute(\"class\").split()\n        assert \"slick-active\" in classes, f\"Ожидался активный слайд, но получили {classes}\"\n    \n        # Шаг 2. Нажимаем вправо → слайд должен стать неактивным\n>       click_element(browser, (By.CLASS_NAME, \"slick-next\"), \"Нажать на правый переключатель слайдера\")\n\ntest_slider_navigation.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\utils\\web_helpers\\browser_actions.py:19: in click_element\n    el = WebDriverWait(browser, 30).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1038fca5bfdb83107090b6419b3b1574\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000029921441D00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Открыть главную страницу сайта Pizzeria", "status": "passed", "start": 1756144686336, "stop": 1756144692735}, {"name": "Нажать на правый переключатель слайдера", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\src\\utils\\web_helpers\\browser_actions.py\", line 19, in click_element\n    el = WebDriverWait(browser, 30).until(\n        EC.element_to_be_clickable(locator)\n    )\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1756144693022, "stop": 1756144723136}], "attachments": [{"name": "log", "source": "462b8358-eb34-4b52-a0e9-f7ef62d90f83-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "d4214b3f-7bcb-44f4-a774-31cd69267a8b-attachment.txt", "type": "text/plain"}], "start": 1756144686335, "stop": 1756144723155, "uuid": "6874a6ce-5e9f-4c39-9afe-37ff6a802400", "historyId": "164f981f1c5ebf7da71db979378e34d5", "testCaseId": "164f981f1c5ebf7da71db979378e34d5", "fullName": "tests.main_page.test_slider_navigation#test_slider_navigation", "labels": [{"name": "parentSuite", "value": "tests.main_page"}, {"name": "suite", "value": "test_slider_navigation"}, {"name": "host", "value": "DESKTOP-2SK90NU"}, {"name": "thread", "value": "11204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.main_page.test_slider_navigation"}], "titlePath": ["tests", "main_page", "test_slider_navigation.py"]}