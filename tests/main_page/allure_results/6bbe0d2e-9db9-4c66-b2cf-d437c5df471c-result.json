{"name": "Переход на страницу с описанием пиццы", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5b49426052ca <unknown>\n#1 0x5b49420ac550 <unknown>\n#2 0x5b49420fe0f0 <unknown>\n#3 0x5b49420fe2e1 <unknown>\n#4 0x5b494214c5e4 <unknown>\n#5 0x5b4942123bed <unknown>\n#6 0x5b49421499e6 <unknown>\n#7 0x5b4942123993 <unknown>\n#8 0x5b49420efd6b <unknown>\n#9 0x5b49420f1141 <unknown>\n#10 0x5b49425ca2ab <unknown>\n#11 0x5b49425ce0b9 <unknown>\n#12 0x5b49425b1139 <unknown>\n#13 0x5b49425cec68 <unknown>\n#14 0x5b494259560f <unknown>\n#15 0x5b49425f31f8 <unknown>\n#16 0x5b49425f33d6 <unknown>\n#17 0x5b49426045e6 <unknown>\n#18 0x7a22f934eaa4 <unknown>\n#19 0x7a22f93dba34 __clone", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"ef6e07289337b29d7fbda8e534b7e76d\")>\n\n    @allure.title(\"Переход на страницу с описанием пиццы\")\n    def test_open_pizza_page_from_main(browser):\n        logging.info(\"Start test_open_pizza_page_from_main\")\n    \n        open_main_page(browser)\n        click_element(browser, (By.XPATH,\n                      \"(//aside[@id='accesspress_store_product-5']//li[contains(@class,'slick-active')])[1]\"),\n                      \"Нажать на изображение пиццы\")\n        item_details = [\n            {\"name\": \"4 в 1\", \"price\": \"435,00\"}\n        ]\n    \n>       verify_item_details(browser, item_details)\n\ntest_open_pizza_page_from_main.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\src\\actions\\product_details.py:13: in verify_item_details\n    assert_text_in_element(\n..\\..\\src\\utils\\web_helpers\\assertions.py:19: in assert_text_in_element\n    el = WebDriverWait(browser, 50).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ef6e07289337b29d7fbda8e534b7e76d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002579B2C22A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5b49426052ca <unknown>\nE       #1 0x5b49420ac550 <unknown>\nE       #2 0x5b49420fe0f0 <unknown>\nE       #3 0x5b49420fe2e1 <unknown>\nE       #4 0x5b494214c5e4 <unknown>\nE       #5 0x5b4942123bed <unknown>\nE       #6 0x5b49421499e6 <unknown>\nE       #7 0x5b4942123993 <unknown>\nE       #8 0x5b49420efd6b <unknown>\nE       #9 0x5b49420f1141 <unknown>\nE       #10 0x5b49425ca2ab <unknown>\nE       #11 0x5b49425ce0b9 <unknown>\nE       #12 0x5b49425b1139 <unknown>\nE       #13 0x5b49425cec68 <unknown>\nE       #14 0x5b494259560f <unknown>\nE       #15 0x5b49425f31f8 <unknown>\nE       #16 0x5b49425f33d6 <unknown>\nE       #17 0x5b49426045e6 <unknown>\nE       #18 0x7a22f934eaa4 <unknown>\nE       #19 0x7a22f93dba34 __clone\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Открыть главную страницу сайта Pizzeria", "status": "passed", "start": 1755690472451, "stop": 1755690488566}, {"name": "Нажать на изображение пиццы", "status": "passed", "start": 1755690488567, "stop": 1755690495230}, {"name": "Проверить название товара 4 в 1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5b49426052ca <unknown>\n#1 0x5b49420ac550 <unknown>\n#2 0x5b49420fe0f0 <unknown>\n#3 0x5b49420fe2e1 <unknown>\n#4 0x5b494214c5e4 <unknown>\n#5 0x5b4942123bed <unknown>\n#6 0x5b49421499e6 <unknown>\n#7 0x5b4942123993 <unknown>\n#8 0x5b49420efd6b <unknown>\n#9 0x5b49420f1141 <unknown>\n#10 0x5b49425ca2ab <unknown>\n#11 0x5b49425ce0b9 <unknown>\n#12 0x5b49425b1139 <unknown>\n#13 0x5b49425cec68 <unknown>\n#14 0x5b494259560f <unknown>\n#15 0x5b49425f31f8 <unknown>\n#16 0x5b49425f33d6 <unknown>\n#17 0x5b49426045e6 <unknown>\n#18 0x7a22f934eaa4 <unknown>\n#19 0x7a22f93dba34 __clone\n\n", "trace": "  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\src\\utils\\web_helpers\\assertions.py\", line 19, in assert_text_in_element\n    el = WebDriverWait(browser, 50).until(\n        EC.visibility_of_element_located(locator)\n    )\n  File \"C:\\Users\\Admin\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1755690495231, "stop": 1755690545531}], "attachments": [{"name": "log", "source": "68a651f6-9473-4b8e-b400-fbbca03f3d77-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "f6b2bde7-405f-46be-bd4b-f364d03f68e9-attachment.txt", "type": "text/plain"}], "start": 1755690472450, "stop": 1755690545575, "uuid": "0681f360-b1c1-4b6e-b1eb-420da3608131", "historyId": "0a0205c865118365c911b6b137b2c715", "testCaseId": "0a0205c865118365c911b6b137b2c715", "fullName": "tests.main_page.test_open_pizza_page_from_main#test_open_pizza_page_from_main", "labels": [{"name": "parentSuite", "value": "tests.main_page"}, {"name": "suite", "value": "test_open_pizza_page_from_main"}, {"name": "host", "value": "DESKTOP-2SK90NU"}, {"name": "thread", "value": "12872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.main_page.test_open_pizza_page_from_main"}], "titlePath": ["tests", "main_page", "test_open_pizza_page_from_main.py"]}